values = ~if1991,
group = "Pre- or Post-1991",
position = "bottomright",
title = "Year Built",
layerId = "Pre- or Post-1991"
) %>%
addCircleMarkers(data = points,
radius = 4,
weight = 2,
opacity = .8,
stroke = TRUE,
color = ~pal2(yearGroup),
popup = ~paste("Address:", situs,
"<br>Year Built:", year,
"<br>Zoning:", LUC
),
group = "Year Category"
) %>%
addLegend(pal = pal2,
data = points,
values = ~yearGroup,
group = "Year Category",
position = "bottomright",
title = "Year Built",
layerId = "Year Category"
) %>%
addLayersControl(baseGroups = c("Pre- or Post-1991", "Year Category"),
options = layersControlOptions(collapsed = FALSE)
) %>%
leaflet.extras::addResetMapButton() %>%
htmlwidgets::onRender("
function(el, x) {
var initialLegend = 'Pre- or Post-1991' // Set the initial legend to be displayed by layerId
var myMap = this;
for (var legend in myMap.controls._controlsById) {
var el = myMap.controls.get(legend.toString())._container;
if(legend.toString() === initialLegend) {
el.style.display = 'block';
} else {
el.style.display = 'none';
};
};
myMap.on('baselayerchange',
function (layer) {
for (var legend in myMap.controls._controlsById) {
var el = myMap.controls.get(legend.toString())._container;
if(legend.toString() === layer.name) {
el.style.display = 'block';
} else {
el.style.display = 'none';
};
};
});
}") #https://gist.github.com/noamross/98c2053d81085517e686407096ec0a69
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(sf)
library(tidyverse)
library(tidycensus)
library(tigris)
library(leaflet)
library(leaflet.extras)
census_api_key("e13d5be5cb48d927009e0dca0af99d21918d514f", overwrite = TRUE)
options(scipen = 999)
name <- "Avondale"
codes <- c("R-10", "R-20", "R-30", "R-40", "R-50", "R-55", "R-60", "R-61", "R-90")
dat <- read_csv("data/Avondale_cleaned.csv") %>%
dplyr::filter(LUC %in% codes) %>%
dplyr::filter(WATER == 1) %>%
select(PARID, LUC, WATER, YRBLT, COMM_YRBLT, X_CO, Y_CO, situs)
points <- st_as_sf(dat, coords = c("X_CO", "Y_CO"), crs = "EPSG:2272") %>%
st_transform(crs="EPSG:4326")
points <- points %>%
mutate(year = dplyr::coalesce(YRBLT, COMM_YRBLT)) %>%
mutate(if1991 =
case_when(year < 1991 ~ "Before 1991",
year >= 1991 ~ "1991 or Later"
),
yearGroup =
case_when(year > 2010 ~ "2011-2024",
year >= 2001 & year < 2011 ~ "2001-2010",
year >= 1991 & year < 2001 ~ "1991-2000",
year >= 1981 & year < 1991 ~ "1981-1990",
year >= 1971 & year < 1981 ~ "1971-1980",
year >= 1961 & year < 1971 ~ "1961-1970",
year >= 1951 & year < 1961 ~ "1951-1960",
year < 1951 ~ "1950 or older"
)
)
chester <- counties(state = 42) %>%
dplyr::filter(NAME == "Chester")%>%
st_transform(crs="EPSG:4326")
municipalities <- county_subdivisions(42, county = "Chester") %>%
st_transform(crs="EPSG:4326")
town <- municipalities %>%
dplyr::filter(NAME == name) %>%
st_transform(crs="EPSG:4326")
# Create a palette that maps factor levels to colors
pal1 <- colorFactor(c("#0057e5",
"#e50000"),
domain = c("1991 or Later",
"Before 1991")
)
pal2 <- colorFactor(c("#003b5c",
"#0057e5",
"#41b6e6",
"#3ea908",
"#f0cc2e",
"#ec894d",
"#e50000",
"#e641b6"),
domain = c("1950 or older",
"1951-1960",
"1961-1970",
"1971-1980",
"1981-1990",
"1991-2000",
"2001-2010",
"2011-2024"))
leaflet(height = 1000, width = "100%") %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(lng = town$INTPTLON,
lat = town$INTPTLAT,
zoom = 16) %>%
addPolygons(data = town,
weight = 2,
opacity = .5,
color = "black",
fillOpacity = .01) %>%
addCircleMarkers(data = points,
radius = 4,
weight = 2,
opacity = .8,
stroke = TRUE,
color = ~pal1(if1991),
popup = ~paste("Address:", situs,
"<br>Year Built:", year,
"<br>Zoning:", LUC
),
group = "Pre- or Post-1991"
) %>%
addLegend(pal = pal1,
data = points,
values = ~if1991,
group = "Pre- or Post-1991",
position = "bottomright",
title = "Year Built",
layerId = "Pre- or Post-1991"
) %>%
addCircleMarkers(data = points,
radius = 4,
weight = 2,
opacity = .8,
stroke = TRUE,
color = ~pal2(yearGroup),
popup = ~paste("Address:", situs,
"<br>Year Built:", year,
"<br>Zoning:", LUC
),
group = "Year Category"
) %>%
addLegend(pal = pal2,
data = points,
values = ~yearGroup,
group = "Year Category",
position = "bottomright",
title = "Year Built",
layerId = "Year Category"
) %>%
addLayersControl(baseGroups = c("Pre- or Post-1991", "Year Category"),
options = layersControlOptions(collapsed = FALSE)
) %>%
leaflet.extras::addResetMapButton() %>%
htmlwidgets::onRender("
function(el, x) {
var initialLegend = 'Pre- or Post-1991' // Set the initial legend to be displayed by layerId
var myMap = this;
for (var legend in myMap.controls._controlsById) {
var el = myMap.controls.get(legend.toString())._container;
if(legend.toString() === initialLegend) {
el.style.display = 'block';
} else {
el.style.display = 'none';
};
};
myMap.on('baselayerchange',
function (layer) {
for (var legend in myMap.controls._controlsById) {
var el = myMap.controls.get(legend.toString())._container;
if(legend.toString() === layer.name) {
el.style.display = 'block';
} else {
el.style.display = 'none';
};
};
});
}") #https://gist.github.com/noamross/98c2053d81085517e686407096ec0a69
leaflet(height = 1000, width = "100%") %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(lng = town$INTPTLON,
lat = town$INTPTLAT,
zoom = 16) %>%
addPolygons(data = town,
weight = 2,
opacity = .5,
color = "black",
fillOpacity = .01) %>%
addCircleMarkers(data = points,
radius = 4,
weight = 2,
opacity = .8,
stroke = TRUE,
color = ~pal1(if1991),
popup = ~paste("Address:", situs,
"<br>Year Built:", year,
"<br>Zoning:", LUC
),
group = "Pre- or Post-1991"
) %>%
addLegend(pal = pal1,
data = points,
values = ~if1991,
group = "Pre- or Post-1991",
position = "bottomright",
title = "Year Built",
layerId = "Pre- or Post-1991"
) %>%
addCircleMarkers(data = points,
radius = 4,
weight = 2,
opacity = .8,
stroke = TRUE,
color = ~pal2(yearGroup),
popup = ~paste("Address:", situs,
"<br>Year Built:", year,
"<br>Zoning:", LUC
),
group = "Year Category"
) %>%
addLegend(pal = pal2,
data = points,
values = ~yearGroup,
group = "Year Category",
position = "bottomright",
title = "Year Built",
layerId = "Year Category"
) %>%
addLayersControl(baseGroups = c("Pre- or Post-1991", "Year Category"),
options = layersControlOptions(collapsed = FALSE,),
position = "topmiddle"
) %>%
leaflet.extras::addResetMapButton() %>%
htmlwidgets::onRender("
function(el, x) {
var initialLegend = 'Pre- or Post-1991' // Set the initial legend to be displayed by layerId
var myMap = this;
for (var legend in myMap.controls._controlsById) {
var el = myMap.controls.get(legend.toString())._container;
if(legend.toString() === initialLegend) {
el.style.display = 'block';
} else {
el.style.display = 'none';
};
};
myMap.on('baselayerchange',
function (layer) {
for (var legend in myMap.controls._controlsById) {
var el = myMap.controls.get(legend.toString())._container;
if(legend.toString() === layer.name) {
el.style.display = 'block';
} else {
el.style.display = 'none';
};
};
});
}") #https://gist.github.com/noamross/98c2053d81085517e686407096ec0a69
leaflet(height = 1000, width = "100%") %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(lng = town$INTPTLON,
lat = town$INTPTLAT,
zoom = 16) %>%
addPolygons(data = town,
weight = 2,
opacity = .5,
color = "black",
fillOpacity = .01) %>%
addCircleMarkers(data = points,
radius = 4,
weight = 2,
opacity = .8,
stroke = TRUE,
color = ~pal1(if1991),
popup = ~paste("Address:", situs,
"<br>Year Built:", year,
"<br>Zoning:", LUC
),
group = "Pre- or Post-1991"
) %>%
addLegend(pal = pal1,
data = points,
values = ~if1991,
group = "Pre- or Post-1991",
position = "bottomright",
title = "Year Built",
layerId = "Pre- or Post-1991"
) %>%
addCircleMarkers(data = points,
radius = 4,
weight = 2,
opacity = .8,
stroke = TRUE,
color = ~pal2(yearGroup),
popup = ~paste("Address:", situs,
"<br>Year Built:", year,
"<br>Zoning:", LUC
),
group = "Year Category"
) %>%
addLegend(pal = pal2,
data = points,
values = ~yearGroup,
group = "Year Category",
position = "bottomright",
title = "Year Built",
layerId = "Year Category"
) %>%
addLayersControl(baseGroups = c("Pre- or Post-1991", "Year Category"),
options = layersControlOptions(collapsed = FALSE,),
position = "topleft"
) %>%
leaflet.extras::addResetMapButton() %>%
htmlwidgets::onRender("
function(el, x) {
var initialLegend = 'Pre- or Post-1991' // Set the initial legend to be displayed by layerId
var myMap = this;
for (var legend in myMap.controls._controlsById) {
var el = myMap.controls.get(legend.toString())._container;
if(legend.toString() === initialLegend) {
el.style.display = 'block';
} else {
el.style.display = 'none';
};
};
myMap.on('baselayerchange',
function (layer) {
for (var legend in myMap.controls._controlsById) {
var el = myMap.controls.get(legend.toString())._container;
if(legend.toString() === layer.name) {
el.style.display = 'block';
} else {
el.style.display = 'none';
};
};
});
}") #https://gist.github.com/noamross/98c2053d81085517e686407096ec0a69
leaflet(height = 1000, width = "100%") %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(lng = town$INTPTLON,
lat = town$INTPTLAT,
zoom = 16) %>%
addPolygons(data = town,
weight = 2,
opacity = .5,
color = "black",
fillOpacity = .01) %>%
addCircleMarkers(data = points,
radius = 4,
weight = 2,
opacity = .8,
stroke = TRUE,
color = ~pal1(if1991),
popup = ~paste("Address:", situs,
"<br>Year Built:", year,
"<br>Zoning:", LUC
),
group = "Pre- or Post-1991"
) %>%
addLegend(pal = pal1,
data = points,
values = ~if1991,
group = "Pre- or Post-1991",
position = "topright",
title = "Year Built",
layerId = "Pre- or Post-1991"
) %>%
addCircleMarkers(data = points,
radius = 4,
weight = 2,
opacity = .8,
stroke = TRUE,
color = ~pal2(yearGroup),
popup = ~paste("Address:", situs,
"<br>Year Built:", year,
"<br>Zoning:", LUC
),
group = "Year Category"
) %>%
addLegend(pal = pal2,
data = points,
values = ~yearGroup,
group = "Year Category",
position = "topright",
title = "Year Built",
layerId = "Year Category"
) %>%
addLayersControl(baseGroups = c("Pre- or Post-1991", "Year Category"),
options = layersControlOptions(collapsed = FALSE,),
position = "topright"
) %>%
leaflet.extras::addResetMapButton() %>%
htmlwidgets::onRender("
function(el, x) {
var initialLegend = 'Pre- or Post-1991' // Set the initial legend to be displayed by layerId
var myMap = this;
for (var legend in myMap.controls._controlsById) {
var el = myMap.controls.get(legend.toString())._container;
if(legend.toString() === initialLegend) {
el.style.display = 'block';
} else {
el.style.display = 'none';
};
};
myMap.on('baselayerchange',
function (layer) {
for (var legend in myMap.controls._controlsById) {
var el = myMap.controls.get(legend.toString())._container;
if(legend.toString() === layer.name) {
el.style.display = 'block';
} else {
el.style.display = 'none';
};
};
});
}") #https://gist.github.com/noamross/98c2053d81085517e686407096ec0a69
leaflet(height = 1000, width = "100%") %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(lng = town$INTPTLON,
lat = town$INTPTLAT,
zoom = 16) %>%
addPolygons(data = town,
weight = 2,
opacity = .5,
color = "black",
fillOpacity = .01) %>%
addLayersControl(baseGroups = c("Pre- or Post-1991", "Year Category"),
options = layersControlOptions(collapsed = FALSE,),
position = "topright"
) %>%
addCircleMarkers(data = points,
radius = 4,
weight = 2,
opacity = .8,
stroke = TRUE,
color = ~pal1(if1991),
popup = ~paste("Address:", situs,
"<br>Year Built:", year,
"<br>Zoning:", LUC
),
group = "Pre- or Post-1991"
) %>%
addLegend(pal = pal1,
data = points,
values = ~if1991,
group = "Pre- or Post-1991",
position = "topright",
title = "Year Built",
layerId = "Pre- or Post-1991"
) %>%
addCircleMarkers(data = points,
radius = 4,
weight = 2,
opacity = .8,
stroke = TRUE,
color = ~pal2(yearGroup),
popup = ~paste("Address:", situs,
"<br>Year Built:", year,
"<br>Zoning:", LUC
),
group = "Year Category"
) %>%
addLegend(pal = pal2,
data = points,
values = ~yearGroup,
group = "Year Category",
position = "topright",
title = "Year Built",
layerId = "Year Category"
) %>%
leaflet.extras::addResetMapButton() %>%
htmlwidgets::onRender("
function(el, x) {
var initialLegend = 'Pre- or Post-1991' // Set the initial legend to be displayed by layerId
var myMap = this;
for (var legend in myMap.controls._controlsById) {
var el = myMap.controls.get(legend.toString())._container;
if(legend.toString() === initialLegend) {
el.style.display = 'block';
} else {
el.style.display = 'none';
};
};
myMap.on('baselayerchange',
function (layer) {
for (var legend in myMap.controls._controlsById) {
var el = myMap.controls.get(legend.toString())._container;
if(legend.toString() === layer.name) {
el.style.display = 'block';
} else {
el.style.display = 'none';
};
};
});
}") #https://gist.github.com/noamross/98c2053d81085517e686407096ec0a69
